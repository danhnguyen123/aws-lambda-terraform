name: CD Terraform Pipeline 

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      runApply:
        description: 'Run Terraform Apply? (True/False)' 
        required: true
        type: choice
        default: 'False'
        options:
          - 'True'
          - 'False'

jobs:
  build:
    name: 'Build Artifact'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create layer zip file
      run: |
        chmod +x ./scripts/create_layer_zip.sh
        ./scripts/create_layer_zip.sh

    - name: Upload layer zip file
      uses: actions/upload-artifact@v3
      with:
        name: layer_zip
        path: layer.zip

  plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend-config ../environments/dev/backend.tfvars

    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -out planfile.tfplan -var-file ../environments/dev/variables.tfvars

    - name: Upload plan file
      uses: actions/upload-artifact@v3
      with:
        name: planfile
        path: terraform/planfile.tfplan

  apply:
    name: 'Terraform Apply'
    if: github.event.inputs.runApply == 'True'
    needs: plan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend-config ../environments/dev/backend.tfvars

    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate

    - name: Download plan file
      uses: actions/download-artifact@v2
      with:
        name: planfile
        path: terraform

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve planfile.tfplan 

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
