name: CD Terraform Pipeline 

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      runApply:
        description: 'Run Terraform Apply? (True/False)' 
        required: true
        type: choice
        default: 'False'
        options:
          - 'True'
          - 'False'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'main')
    outputs:
      image_uri: ${{ steps.build_image_step.outputs.image_uri }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        id: build_image_step
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          NAMESPACE: playground
          REPOSITORY: aws-lambda-python
          IMAGE_TAG: "3.11"
        run: |
          docker build -t $REGISTRY/$NAMESPACE/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$NAMESPACE/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image_uri::$REGISTRY/$NAMESPACE/$REPOSITORY:$IMAGE_TAG"

  plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend-config ../environments/dev/backend.tfvars

    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate

    - name: Terraform Plan
      env:
        TF_image_uri: ${{ needs.build_and_push.outputs.image_uri }}
      run: |
        cd terraform
        terraform plan -out planfile.tfplan -var-file ../environments/dev/variables.tfvars

    - name: Upload plan file
      uses: actions/upload-artifact@v3
      with:
        name: planfile
        path: terraform/planfile.tfplan

  apply:
    name: 'Terraform Apply'
    if: github.event.inputs.runApply == 'True'
    needs: plan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend-config ../environments/dev/backend.tfvars

    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate

    - name: Download plan file
      uses: actions/download-artifact@v3
      with:
        name: planfile
        path: terraform

    - name: Download layer zip file
      uses: actions/download-artifact@v3
      with:
        name: layer_zip
        path: .

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve planfile.tfplan 

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
  AWS_DEFAULT_REGION: us-east-1


